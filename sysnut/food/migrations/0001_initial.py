# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-30 22:32
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255, verbose_name='Descri\xe7\xe3o')),
                ('weight', models.DecimalField(decimal_places=2, default=100.0, max_digits=8, verbose_name='Peso l\xedquido (ml ou g)')),
                ('energy', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Energia (kcal)')),
                ('carbohydrates', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Carboidratos (g)')),
                ('total_fat', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Gorduras Totais (g)')),
                ('poly_fat', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Gorduras Poli (g)')),
                ('mono_fat', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Gorduras Mono (g)')),
                ('sat_fat', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Gorduras Saturadas (g)')),
                ('protein', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Prote\xednas (g)')),
                ('total_fibers', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Fibras Totais (g)')),
                ('sol_fibers', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Fibras Sol\xfaveis (g)')),
                ('insol_fibers', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Fibras Insol\xfaveis (g)')),
                ('cholesterol', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Colesterol (mg)')),
                ('retinol', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Retinol (Vit A) (mg)')),
                ('ac_ascorbic', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='\xc1cido Asc\xf3rbico (Vit C) (mg)')),
                ('tiamine', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Tiamina (Vit B1) (mg)')),
                ('riboflavin', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Riboflavina (Vit B2) (mg)')),
                ('pyridoxine', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Piridoxina (Vit B6) (mg)')),
                ('cobalamin', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Cobalamina (Vit B12) (mcg)')),
                ('dvitamin', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Vitamina D (mcg)')),
                ('niacin', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Niacina (Vit B3)(mg)')),
                ('ac_folic', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='\xc1cido f\xf3lico (Vit B9)(mcg)')),
                ('ac_pant', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='\xc1cido pantot\xeanico (Vit B5)(mg)')),
                ('tocopherol', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Tocoferol (Vit E)(mg)')),
                ('iodine', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Iodo (mcg)')),
                ('sodium', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='S\xf3dio (mg)')),
                ('calcium', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='C\xe1lcio (mg)')),
                ('magnesium', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Magn\xe9sio (mg)')),
                ('zinc', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Zinco (mg)')),
                ('manganese', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Mangan\xeas (mg)')),
                ('potassium', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Pot\xe1ssio (mg)')),
                ('phosphor', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='F\xf3sforo (mg)')),
                ('iron', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Ferro (mg)')),
                ('copper', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Cobre (mg)')),
                ('selenium', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Sel\xeanio (mcg)')),
            ],
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal', models.CharField(blank=True, choices=[('CAF\xc9 DA MANH\xc3', 'Caf\xe9 da Manh\xe3'), ('LANCHE I', 'Lanche I'), ('ALMO\xc7O', 'Almo\xe7o'), ('LANCHE II', 'Lanche II'), ('JANTAR', 'Jantar'), ('CEIA', 'Ceia')], default=None, max_length=40, null=True, verbose_name='Refei\xe7\xe3o')),
                ('home_measure', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Medida Caseira (g ou ml)')),
                ('weight', models.DecimalField(decimal_places=2, default=100.0, max_digits=8, verbose_name='Peso l\xedquido (ml ou g)')),
                ('original_food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meal_food', to='food.Food', verbose_name='Alimento')),
            ],
        ),
    ]
